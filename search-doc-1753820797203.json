{"searchDocs":[{"title":"üëê Get Your Connection String","type":0,"sectionRef":"#","url":"/intro-lab/docs/importing-data/get-connection-string","content":"üëê Get Your Connection String To load the dataset into your cluster, you will need to get the connection string for your cluster. In the Atlas UI, navigate to the Overview page. In the Clusters section, click &quot;Connect.&quot; A modal will display several ways to connect to your database. Select &quot;Compass.&quot; While we won't be using Compass to import the data, it's an easy way to see your connection string. Look for your connection string. It should look something like this: mongodb+srv://&lt;username&gt;:&lt;password&gt;@&lt;cluster-url&gt;/ Click the copy button next to your connection string to copy it to your clipboard. Paste the connection string somewhere safe. You will need this connection string several times throughout this training. tip Don't forget to replace &lt;password&gt; with the password you set when you created the cluster.","keywords":"","version":"Next"},{"title":"üìò The Library Management System Application","type":0,"sectionRef":"#","url":"/intro-lab/docs/demo-app/intro","content":"üìò The Library Management System Application Throughout this workshop, you will have the opportunity to interface with the data using the library management system application we've provided you. This application uses an Angular front end and a Node.js or Java Spring Boot back end. The application is already built and deployed to a GitHub codespace, so you won't need to install anything in your local environment. You will be able to access the application from your browser. Our library management application leverages the data modeling patterns you'll explore throughout this workshop. As you navigate through the application, you'll witness how these patterns come to life, enhancing both the user experience and the efficiency of the system. The application enables users to explore a rich catalog of books, search for specific titles, delve into book details, and even share their thoughts through comments. Users can also reserve books for future reading. Behind the scenes, MongoDB's data modeling patterns play a crucial role in ensuring the application's flexibility, scalability, and performance. For library employees, an admin panel offers functionalities like managing book checkouts and returns. As we guide you through the application, you'll discover how the various design patterns we've discussed so far are seamlessly integrated to optimize data storage, retrieval, and overall system performance. Let's get you set up with this application now.","keywords":"","version":"Next"},{"title":"üëê Configure the Application","type":0,"sectionRef":"#","url":"/intro-lab/docs/demo-app/configure","content":"","keywords":"","version":"Next"},{"title":"Reload the client‚Äã","type":1,"pageTitle":"üëê Configure the Application","url":"/intro-lab/docs/demo-app/configure#reload-the-client","content":" Now that the server is running, you can reload the client to see the application.  In the upper right panel, click the refresh icon to reload the client.    Clicking this will reload the client, which should now be connected to the database. You should see the application with some books listed now.  ","version":"Next","tagName":"h2"},{"title":"Open the client in a new window‚Äã","type":1,"pageTitle":"üëê Configure the Application","url":"/intro-lab/docs/demo-app/configure#open-the-client-in-a-new-window","content":" If you accidentally close the Client or want to open it in a separate tab/window go to the Ports tab, hover over Client and a world icon should appear. Click it and the client will open in a new tab.   ","version":"Next","tagName":"h2"},{"title":"üëê Importing the Library Data","type":0,"sectionRef":"#","url":"/intro-lab/docs/importing-data/import-data","content":"üëê Importing the Library Data Now that you have your connection string, you can import the library data into your project. To do this, we've built an importer app that will copy the data from our database, into your cluster. You'll need to provide the importer app with your connection string. caution You should never share your connection string with anyone. It contains your database credentials, and anyone with access to it can read and write data to your database. To import the data, start by going to the importer application. You will be greeted by this minimalistic interface. Paste your connection string into the input field, and click &quot;Import Library Data.&quot; You should see a message saying that the import has started. Starting data import note Importing the data might take a few minutes. It's a good time to stretch or get a coffee! ‚òï After a few minutes, you should see that the import job was successful. Once the data is copied to your cluster, you are ready to start building your application.","keywords":"","version":"Next"},{"title":"üìò Library Management System Dataset","type":0,"sectionRef":"#","url":"/intro-lab/docs/importing-data/intro","content":"üìò Library Management System Dataset This dataset contains over 6,700 documents for books and approximately 6,250 associated authors. The data is structured using some of the most common data modeling techniques in MongoDB. Those techniques are covered in the &quot;Data modeling hands-on session&quot; delivered as part of Developer Days.","keywords":"","version":"Next"},{"title":"Introduction","type":0,"sectionRef":"#","url":"/intro-lab/docs/intro","content":"","keywords":"","version":"Next"},{"title":"Requirements‚Äã","type":1,"pageTitle":"Introduction","url":"/intro-lab/docs/intro#requirements","content":" Google Chrome installedGitHub accountEnsure your laptop can access GitHub and GitHub Codespaces (sometimes corporate VPNs block these sites!)  ","version":"Next","tagName":"h2"},{"title":"Hardware requirements‚Äã","type":1,"pageTitle":"Introduction","url":"/intro-lab/docs/intro#hardware-requirements","content":" To ensure you have the best experience during our sessions, please review the following minimum hardware requirements needed to participate effectively in our workshops and activities. These requirements are essential for running modern browsers and cloud-based applications involved in our sessions.  ","version":"Next","tagName":"h2"},{"title":"Operating system‚Äã","type":1,"pageTitle":"Introduction","url":"/intro-lab/docs/intro#operating-system","content":" Windows: Windows 10 (version 1903 or later) macOS: macOS Catalina (10.15) or later  ","version":"Next","tagName":"h3"},{"title":"Processor‚Äã","type":1,"pageTitle":"Introduction","url":"/intro-lab/docs/intro#processor","content":" Intel: Core i5 or betterAMD: Ryzen 5 or equivalentApple Silicon: M1 chip or later  ","version":"Next","tagName":"h3"},{"title":"Memory‚Äã","type":1,"pageTitle":"Introduction","url":"/intro-lab/docs/intro#memory","content":" Minimum RAM: 8 GBRecommended RAM: 16 GB or more for smoother multitasking and more demanding applications  ","version":"Next","tagName":"h3"},{"title":"Storage‚Äã","type":1,"pageTitle":"Introduction","url":"/intro-lab/docs/intro#storage","content":" At least 256 GB of available space, preferably SSD, for faster read/write speeds  ","version":"Next","tagName":"h3"},{"title":"Internet connection‚Äã","type":1,"pageTitle":"Introduction","url":"/intro-lab/docs/intro#internet-connection","content":" Stable and high-speed internet connection (minimum 15 Mbps) for optimal performance with cloud-based applications  ","version":"Next","tagName":"h3"},{"title":"Recommendations‚Äã","type":1,"pageTitle":"Introduction","url":"/intro-lab/docs/intro#recommendations","content":" Ensure that your system software is up to date to benefit from the latest features and security enhancements.Consider using a monitor with at least 1080p resolution for a clearer and more detailed visual experience during our presentations and hands-on sessions.  By meeting these hardware specifications, you will be well-prepared to engage fully with our Developer Day content. We look forward to an exciting and productive event with all participants! ","version":"Next","tagName":"h2"},{"title":"üëê Start the Application","type":0,"sectionRef":"#","url":"/intro-lab/docs/demo-app/start-app","content":"","keywords":"","version":"Next"},{"title":"Option 1: Run in a codespace‚Äã","type":1,"pageTitle":"üëê Start the Application","url":"/intro-lab/docs/demo-app/start-app#option-1-run-in-a-codespace","content":" By far, the easiest way to start the application is to run it in a codespace. A codespace is a cloud-hosted, containerized development environment that you can connect to from Visual Studio Code. It comes pre-configured with all the tools you need to build and run the application.  In the case of this application, you can even use the online IDE to edit the code and see the changes reflected in the running application.  üöÄ NodeJS/Express‚òïÔ∏è Java Spring Boot Open the repository on the main branch. To start the application in a codespace, click &quot;Code.&quot; Then, look for the Codespaces tab. Click &quot;Create Codespace on main.&quot; This will create a new codespace for you and start the application.  Let it run for a few seconds as it prepares your environment. It will clone the repository, prepare the containers, and run the installation scripts. Once it's ready, you'll see an IDE, with a preview window that shows the running application.  note Again, this might take a few minutes. It's a great time to grab a coffee. ‚òïÔ∏è    warning Right now, you should see a big error message in the console, as we haven't configured the app yet. Don't worry, you'll get it up and running in a few minutes. ####### ###### ###### ####### ###### # # # # # # # # # # # # # # # # # # ##### ###### ###### # # ###### # # # # # # # # # # # # # # # # # # ####### # # # # ####### # #   ","version":"Next","tagName":"h2"},{"title":"Expose the server port‚Äã","type":1,"pageTitle":"üëê Start the Application","url":"/intro-lab/docs/demo-app/start-app#expose-the-server-port","content":" To get the application working in that environment, there is one small change you need to make to the codespace. You need to expose the port where the server is running.  Look for the Ports tab at the bottom of the IDE.    Once you click on the tab, you'll see a list of ports. Right-click on the port Server (5000) row. Then, select &quot;Port Visibility&quot; and &quot;Public.&quot;    You'll see the text in the Visibility column change to Public.  That's it! You're now ready to move to the next section.  ","version":"Next","tagName":"h3"},{"title":"ü¶∏ Option 2: Run locally‚Äã","type":1,"pageTitle":"üëê Start the Application","url":"/intro-lab/docs/demo-app/start-app#-option-2-run-locally","content":" If you prefer to run the application locally, you can do so by following these steps. Keep in mind that the following steps of this lab will be using the codespace, so you might need to adapt some of the commands.  info During the lab, we will use GitHub Codespaces. These instructions are here just in case you can't use Codespaces or you really, really, really want a local installation.  First, clone the repository to your local machine.  git clone git@github.com:mongodb-developer/library-management-system.git   Then, change to the library-management-system directory.  cd library-management-system   üöÄ NodeJS/Express‚òïÔ∏è Java Spring Boot Now, go to each of the client and server directories and install the dependencies. cd client npm install cd ../server npm install Start the server application. npm start And, in another terminal window, start the client application. cd client npm start   You now have the client running on http://localhost:4200 and the server running on http://localhost:5000. ","version":"Next","tagName":"h2"},{"title":"üëê Build a compound index following the ESR rule","type":0,"sectionRef":"#","url":"/intro-lab/docs/indexing/create-compound-index","content":"","keywords":"","version":"Next"},{"title":"Explore the code‚Äã","type":1,"pageTitle":"üëê Build a compound index following the ESR rule","url":"/intro-lab/docs/indexing/create-compound-index#explore-the-code","content":" üöÄ NodeJS/Express‚òïÔ∏è Java Spring Boot Open the file server/src/indexing/borrowed-books-index.ts file in your GitHub Codespace. Examine the code to build a compound index on the issueDetails collection. /** * Create the index to support the following query: * issueDetails.find({ * 'user._id': userID, * borrowDate: { $gte: date }, * }, { * sort: { returnedDate: -1 } * }) */ await collections?.issueDetails?.createIndex({ // Equality 'user._id': 1, // Sort returnedDate: 1, // Range borrowDate: 1, }); info The index is created on the issueDetails collection to support the query that finds the issue details for a user with a specific userID, where the borrowDate is greater than or equal to a specific date, and sorts the results by returnedDate in descending order. This is compound index and it follows the ESR rule: Equality, Sort, and Range. This ensures optimal performance for the query. Execute the script to create the compound index. npx tsx src/indexing/borrowed-books-index.ts After a few seconds, you should see the following output: Connecting to MongoDB Atlas... Connected! BEFORE creating the index Winning plan stage: COLLSCAN No index used Total documents examined: 1284 Number of documents returned: 3 ----------------------------- AFTER creating the index Winning plan stage: IXSCAN Index used: user._id_1_returnedDate_1_borrowDate_1 Total documents examined: 3 Number of documents returned: 3 info The script uses explain plans to compare the query plans before and after creating the index. Notice the difference in the winning plan stage and the number of documents examined before and after creating the index.  ","version":"Next","tagName":"h2"},{"title":"ü¶∏‚Äç‚ôÄÔ∏è Try different indexes‚Äã","type":1,"pageTitle":"üëê Build a compound index following the ESR rule","url":"/intro-lab/docs/indexing/create-compound-index#Ô∏è-try-different-indexes","content":" Modify the compound index by adding and removing fields, and observe the changes in the query explain plans. ","version":"Next","tagName":"h2"},{"title":"üëê Deploy a Database Cluster","type":0,"sectionRef":"#","url":"/intro-lab/docs/mongodb-atlas/create-cluster","content":"","keywords":"","version":"Next"},{"title":"Create a new cluster‚Äã","type":1,"pageTitle":"üëê Deploy a Database Cluster","url":"/intro-lab/docs/mongodb-atlas/create-cluster#create-a-new-cluster","content":" From the overview page, click on &quot;+ Create.&quot;    note If you just created your account, you will automatically be redirected to the cluster creation page and can skip this step.  You will be redirected to the cluster creation page. Here you can choose the cloud provider and region where your data will be stored. You can also choose the type of cluster you want to create. For this tutorial, we will use the free tier.  For the cluster tier, pick M0, which is the free tier. In the Name input box, put the name &quot;DeveloperDay&quot; (one word, no spaces).Uncheck the Automate security setup box. You will set up security manually in the next steps.Uncheck the Preload sample dataset box. You will import a dataset later in this tutorial.Select your favorite cloud provider and the region closest to you.Finally, click on &quot;Create Deployment.&quot;    Once you're done with the hardest part of the process (the captcha), you will be redirected to the security quickstart.  ","version":"Next","tagName":"h2"},{"title":"Security quickstart‚Äã","type":1,"pageTitle":"üëê Deploy a Database Cluster","url":"/intro-lab/docs/mongodb-atlas/create-cluster#security-quickstart","content":" By default, your MongoDB Atlas deployment is completely locked down. You need to configure the network settings and create a user to access your database.  While your deployment is being provisioned, you will see the security quickstart dialog.  ","version":"Next","tagName":"h2"},{"title":"Network access‚Äã","type":1,"pageTitle":"üëê Deploy a Database Cluster","url":"/intro-lab/docs/mongodb-atlas/create-cluster#network-access","content":" First, you need to Allow Access from Anywhere. You will see a field prepopulated with the IP address 0.0.0.0/0. This means that you can connect to your database from any IP address, including the virtual environment you will use for this lab. Click Add IP Address to add it to the network allowlist.  note If you don't see a button to allow access from anywhere, you should close the dialog and go to the Network Access tab under the Security section in the left sidebar. Click on Add IP Address, add 0.0.0.0/0, and click Confirm.  caution It is dangerous to expose your database to the entire world. Never do this in a real production environment.  ","version":"Next","tagName":"h3"},{"title":"Database user‚Äã","type":1,"pageTitle":"üëê Deploy a Database Cluster","url":"/intro-lab/docs/mongodb-atlas/create-cluster#database-user","content":" Next, you need to create a database user. Pick any username and password you want. They will be used when you want to connect to your database. Click &quot;Create Database User&quot; to create the user.  Atlas might create the user automatically for you if you have just created your account. In this case, the username and password will match your Atlas account credentials.  tip Make sure to remember your username and password. You will need them later. For the sake of this workshop, it might be preferable to use a simple password that you'll remember over a more secure one. Don't use any special characters in your password. Even though MongoDB allows some special characters, they might not work well with the tools you'll use later in this workshop.  ","version":"Next","tagName":"h3"},{"title":"That's all!‚Äã","type":1,"pageTitle":"üëê Deploy a Database Cluster","url":"/intro-lab/docs/mongodb-atlas/create-cluster#thats-all","content":" You have a new database cluster, and you can now connect to it from your application. If everything goes well, you should see your newly created cluster in the database deployment screen.   ","version":"Next","tagName":"h2"},{"title":"üëê Create Your Account","type":0,"sectionRef":"#","url":"/intro-lab/docs/mongodb-atlas/create-account","content":"","keywords":"","version":"Next"},{"title":"Sign up for MongoDB Atlas‚Äã","type":1,"pageTitle":"üëê Create Your Account","url":"/intro-lab/docs/mongodb-atlas/create-account#sign-up-for-mongodb-atlas","content":" tip Creating a MongoDB Atlas account is free and does not require a credit card.  caution Some corporate email accounts have restrictions on their use with Atlas. Consider using your personal account instead.  Go to the MongoDB website and create your account. You will be greeted by a form similar to the one below.    info If you are doing this lab at an event, you should use the same email address you used to register for the event.  Complete the form and click the &quot;Create Your Atlas Account&quot; button.  ","version":"Next","tagName":"h2"},{"title":"Verify your email address‚Äã","type":1,"pageTitle":"üëê Create Your Account","url":"/intro-lab/docs/mongodb-atlas/create-account#verify-your-email-address","content":" You will receive an email from MongoDB asking you to verify your email address. Click the link in the email to verify your email address.    caution If you haven't received the email within two minutes, check your spam folder.  ","version":"Next","tagName":"h3"},{"title":"Finish the onboarding‚Äã","type":1,"pageTitle":"üëê Create Your Account","url":"/intro-lab/docs/mongodb-atlas/create-account#finish-the-onboarding","content":" You will be redirected to the MongoDB Atlas onboarding wizard. Fill in the form and click &quot;Finish&quot; to continue. ","version":"Next","tagName":"h3"},{"title":"üìò What is MongoDB Atlas?","type":0,"sectionRef":"#","url":"/intro-lab/docs/mongodb-atlas/what-is-mongodb","content":"","keywords":"","version":"Next"},{"title":"Why use MongoDB Atlas?‚Äã","type":1,"pageTitle":"üìò What is MongoDB Atlas?","url":"/intro-lab/docs/mongodb-atlas/what-is-mongodb#why-use-mongodb-atlas","content":" There are many reasons why you might want to use MongoDB Atlas, but most of all, it's by far the easiest way to get started with MongoDB.  On top of that, MongoDB Atlas offers a lot of features that you would otherwise have to set up yourself. For example, MongoDB Atlas offers:  Atlas Search ‚Äî a powerful search engine that allows you to search through your data.Atlas Data Federation - a way to query data that is stored in AWS S3 or Google Cloud Storage.Atlas Vector Search - a way to augment your data with AI/mostly.  ","version":"Next","tagName":"h2"},{"title":"Where is MongoDB Atlas deployed?‚Äã","type":1,"pageTitle":"üìò What is MongoDB Atlas?","url":"/intro-lab/docs/mongodb-atlas/what-is-mongodb#where-is-mongodb-atlas-deployed","content":" You can choose the cloud provider and the region where your MongoDB Atlas cluster is deployed. MongoDB Atlas is available in all major cloud providers, including AWS, Azure, and Google Cloud.  It is also available in many regions around the world. You can choose the region that is closest to you or the region that is closest to your users.  You can also use MongoDB Atlas directly from your cloud provider of choice by installing it from the marketplace. This will simplify all the billing and management of your MongoDB Atlas cluster.  ","version":"Next","tagName":"h2"},{"title":"How much does MongoDB Atlas cost?‚Äã","type":1,"pageTitle":"üìò What is MongoDB Atlas?","url":"/intro-lab/docs/mongodb-atlas/what-is-mongodb#how-much-does-mongodb-atlas-cost","content":" MongoDB Atlas is free to use for learning and development. You can create a free cluster and use it for as long as you want. You can also create as many free clusters as you want. ","version":"Next","tagName":"h2"},{"title":"üìò Intro","type":0,"sectionRef":"#","url":"/intro-lab/docs/optimize/intro","content":"üìò Intro If you followed this session in person with the MongoDB team, you've learned data modeling concepts and best practices. The data you imported uses the schema presented in the session, but the code samples are querying data as if it were a relational database. In this exercise, you'll update the code to use the data model you learned about in the session. note If you haven't followed the session with us, we recommend that you go through the Data Modeling course on MongoDB University before attempting this exercise.","keywords":"","version":"Next"},{"title":"üëê Optimize the Query","type":0,"sectionRef":"#","url":"/intro-lab/docs/optimize/optimize","content":"üëê Optimize the Query Now that you know of the patterns that we used in our data schema, you can rewrite the getBook method to retrieve the book information. Open the server/src/controllers/books.ts file, and look for the getBook method. How could you rewrite this query to be blazing fast, and meet the requirements that we defined for this application? tip How many calls do you need to do to your database now? Do you still need an aggregation pipeline? Look in the documentation for the findOne method. Click here to see the answer public async getBook(bookId: string): Promise&lt;Book&gt; { /** * Optimized Code */ const book = await collections?.books?.findOne({ _id: bookId }); return book; } ","keywords":"","version":"Next"},{"title":"üìò What is Schema Validation, and Why Use It?","type":0,"sectionRef":"#","url":"/intro-lab/docs/schema-validation/what-is-schema-validation","content":"","keywords":"","version":"Next"},{"title":"All about schema validation‚Äã","type":1,"pageTitle":"üìò What is Schema Validation, and Why Use It?","url":"/intro-lab/docs/schema-validation/what-is-schema-validation#all-about-schema-validation","content":" Schema validation in MongoDB involves defining validation rules using JSON Schema, a powerful tool for validating the structure and contents of JSON documents. These rules can specify requirements such as:  Field types: Ensuring that certain fields are of a specific data type (e.g., strings, integers, arrays)Required fields: Ensuring that certain fields must be present in all documentsValue ranges: Ensuring that numeric fields fall within specific rangesString patterns: Ensuring that string fields match certain regular expressions  ","version":"Next","tagName":"h2"},{"title":"Why use schema validation?‚Äã","type":1,"pageTitle":"üìò What is Schema Validation, and Why Use It?","url":"/intro-lab/docs/schema-validation/what-is-schema-validation#why-use-schema-validation","content":" Data integrity: By enforcing a schema, you can prevent invalid data from being inserted into your collection, thus maintaining the integrity of your dataset.Consistency: Schema validation ensures that all documents follow a consistent structure, making it easier to query and manage your data.Error prevention: Catching schema violations at the database level helps in identifying errors early in the data entry process, reducing the chances of data-related issues later.Simplified application logic: With schema validation handled by the database, application developers can focus more on business logic rather than data validation.Enhanced collaboration: For teams working on a shared database, schema validation helps ensure that all team members follow the same data structure conventions, reducing misunderstandings and errors.  ","version":"Next","tagName":"h2"},{"title":"Summary‚Äã","type":1,"pageTitle":"üìò What is Schema Validation, and Why Use It?","url":"/intro-lab/docs/schema-validation/what-is-schema-validation#summary","content":" In this section, you will explore the JSON schema for the users and authors collections, run a script to apply the schema to the collections, and test the schema validation by inserting a document that does not match the schema. ","version":"Next","tagName":"h2"},{"title":"üéØ Summary","type":0,"sectionRef":"#","url":"/intro-lab/docs/summary","content":"üéØ Summary Congratulations! Following this tutorial, you have successfully: Created a MongoDB Atlas account.Deployed your first MongoDB cluster in the cloud.Installed additional tools such as Compass.Imported the library sample dataset. Visit the MongoDB Developer Center for more useful information and tutorials.","keywords":"","version":"Next"},{"title":"ü¶∏‚Äç‚ôÄÔ∏è Enable Validation for the Authors Collection","type":0,"sectionRef":"#","url":"/intro-lab/docs/schema-validation/validate-authors","content":"ü¶∏‚Äç‚ôÄÔ∏è Enable Validation for the Authors Collection In this exercise, you will define a JSON schema for the authors collection, apply the schema to the collection, and test the schema validation by inserting a document that does not match the schema. This is an advanced exercise that requires you to write code. If you get stuck and you're doing this during a live workshop, you can flag down an instructor in the room for help. Start by opening the server/src/schema-validation/apply-schema.ts file in your GitHub codespace and uncomment lines 41-61.Complete the tasks marked with // TODO comments.Execute the script again to apply the schema to the authors collection. cd server npx tsx src/schema-validation/apply-schema.ts Finally, test the schema validation by modifying the server/src/schema-validation/test-validation.ts script. Inserting a document in the authors collection.","keywords":"","version":"Next"},{"title":"üëê Enable Validation for the Users Collection","type":0,"sectionRef":"#","url":"/intro-lab/docs/schema-validation/validate-users","content":"","keywords":"","version":"Next"},{"title":"Database user permissions‚Äã","type":1,"pageTitle":"üëê Enable Validation for the Users Collection","url":"/intro-lab/docs/schema-validation/validate-users#database-user-permissions","content":" To update the validator for any database collection, your database user must have admin privileges. Follow these steps to ensure your user has the correct permissions:  Open the Atlas UI.In the left-hand menu, navigate to Network Settings and select &quot;Database Access.&quot;Locate your database user in the list. Check the MongoDB Roles column for the role of the user you are using for this workshop. If the role is not atlasAdmin@admin, you will need to update it.If the role is not atlasAdmin@admin, click &quot;Edit&quot; button next to the user.Scroll down to the Database User Privileges section and expand the Built-in Role dropdown.Select &quot;Atlas admin&quot; from the dropdown menu.Click &quot;Update User&quot; to save the changes.  Atlas will deploy the change in a few seconds.  ","version":"Next","tagName":"h2"},{"title":"Explore the JSON schema‚Äã","type":1,"pageTitle":"üëê Enable Validation for the Users Collection","url":"/intro-lab/docs/schema-validation/validate-users#explore-the-json-schema","content":" üöÄ NodeJS/Express‚òïÔ∏è Java Spring Boot The JSON schema for the users collection is stored in the server/src/schema-validation/apply-schema.ts file. Open the file in your GitHub codespace and examine the schema.  const userSchema = { bsonType: 'object', required: ['name', 'isAdmin'], properties: { name: { bsonType: 'string', minLength: 5, description: 'must be a string and is required' }, isAdmin: { bsonType: 'bool', description: 'must be a boolean and is required' } } };   The schema defines the following constraints:  The required fields are name and isAdmin.The name field must be a string with a minimum length of five characters.The isAdmin field must be a boolean.  ","version":"Next","tagName":"h2"},{"title":"Explore the script to apply the schema‚Äã","type":1,"pageTitle":"üëê Enable Validation for the Users Collection","url":"/intro-lab/docs/schema-validation/validate-users#explore-the-script-to-apply-the-schema","content":" üöÄ NodeJS/Express‚òïÔ∏è Java Spring Boot Examine the lines immediately following the schema definition in the apply-schema.ts file. You will see a function that applies the schema to the users collection. console.log('Applying schema validation for users...'); const resultUsers = await db.command({ collMod: 'users', validator: { $jsonSchema: userSchema }, validationLevel: 'strict', validationAction: 'error' }); The function uses the db.command() method to apply the schema to the users collection. The collMod option specifies the collection to which the schema should be applied.The validator option specifies the JSON schema to use for validation. This is the userSchema object declared just above.The validationLevel option specifies the level of validation to perform. This could be strict or moderate. If you set it to strict, the document will be inserted and updated only if it passes validation.If you set it to moderate, updates to existing documents in the collection that don't match the validation rules aren't checked for validity. And finally, the validationAction option specifies the action to take when a document fails validation. This could be error or warn. If you set it to error, MongoDB rejects any insert or update that violates the validation criteria.If you set it to warn, the operation proceeds, but the violation is recorded in the MongoDB log.  ","version":"Next","tagName":"h2"},{"title":"Apply the schema to the users collection‚Äã","type":1,"pageTitle":"üëê Enable Validation for the Users Collection","url":"/intro-lab/docs/schema-validation/validate-users#apply-the-schema-to-the-users-collection","content":" üöÄ NodeJS/Express‚òïÔ∏è Java Spring Boot You need to run the script to apply the schema to the users collection. Open a new terminal emulator tab in your GitHub codespace. Locate the bottom panel and click on the TERMINAL tab.Locate the + icon on the top right of the terminal panel and click on it to open a new terminal tab.Click on the new terminal tab to activate it. Run the following command to apply the schema to the users collection: cd server npx tsx src/schema-validation/apply-schema.ts You might be prompted to allow pasting into the terminal. Click &quot;Allow&quot; to paste the command. Click &quot;Enter&quot; to run the command. After a few seconds, you should see the following output: Connecting to MongoDB Atlas... Connected! Applying schema validation for users... Schema validation enabled!   caution If you see an error related to your user permissions, go back to the Database User Permissions section and update your user permissions.  ","version":"Next","tagName":"h2"},{"title":"Test the schema validation‚Äã","type":1,"pageTitle":"üëê Enable Validation for the Users Collection","url":"/intro-lab/docs/schema-validation/validate-users#test-the-schema-validation","content":" üöÄ NodeJS/Express‚òïÔ∏è Java Spring Boot Now that the schema validation is enabled for the users collection, you can test it by inserting a document that does not match the schema. Open the file server/src/schema-validation/test-validation.ts file.Explore the call to the insertOne() function around line 12 that will try to insert a new user and the error handling code around line 18.Execute the script by running the following command. npx tsx src/schema-validation/test-validation.ts The error describes that the name and isAdmin fields are required but missing in the document you tried to insert. Modify the script to insert a document again with the name and isAdmin fields and you should see the document inserted successfully.  ","version":"Next","tagName":"h2"},{"title":"Summary‚Äã","type":1,"pageTitle":"üëê Enable Validation for the Users Collection","url":"/intro-lab/docs/schema-validation/validate-users#summary","content":" In this exercise, you explored the JSON schema for the users collection, ran a script to apply the schema to the collection, and tested the schema validation by inserting a document that does not match the schema.  In the next exercise, you will enable schema validation for the authors collection. ","version":"Next","tagName":"h2"},{"title":"üìò Patterns Used","type":0,"sectionRef":"#","url":"/intro-lab/docs/optimize/patterns","content":"","keywords":"","version":"Next"},{"title":"Available books - computed‚Äã","type":1,"pageTitle":"üìò Patterns Used","url":"/intro-lab/docs/optimize/patterns#available-books---computed","content":" The first thing we can do is to compute the number of available books when we insert or update a book. This way, we don't have to compute it every time we retrieve a book.  Now that we have this computed field, we don't need all the later stages of the aggregation pipeline, and we can directly query the book collection.  ","version":"Next","tagName":"h2"},{"title":"Reviews - subset‚Äã","type":1,"pageTitle":"üìò Patterns Used","url":"/intro-lab/docs/optimize/patterns#reviews---subset","content":" For the reviews, we know that our users generally only look at the top five reviews. We can store the top five reviews in the book document and only query the reviews collection when we need to display more reviews.  ","version":"Next","tagName":"h2"},{"title":"Author - extended reference‚Äã","type":1,"pageTitle":"üìò Patterns Used","url":"/intro-lab/docs/optimize/patterns#author---extended-reference","content":" For the author information, instead of storing only the author id, we can store the id, along with the author name. This way, we don't have to query the authors collection to display the author name. ","version":"Next","tagName":"h2"},{"title":"‚ÑπÔ∏è Connection Issues","type":0,"sectionRef":"#","url":"/intro-lab/docs/troubleshooting/connection-string-issues","content":"","keywords":"","version":"Next"},{"title":"Troubleshooting Guide: Atlas URI Connection Issues‚Äã","type":1,"pageTitle":"‚ÑπÔ∏è Connection Issues","url":"/intro-lab/docs/troubleshooting/connection-string-issues#troubleshooting-guide-atlas-uri-connection-issues","content":" Problem:‚Äã  Users are unable to connect the Library Management Application to the Atlas cluster due to a missing or misconfigured Atlas URI connection string.  Common Causes:‚Äã  The connection string is not correctly copied from the Atlas cluster.The connection string is missing from the application configuration.Incorrect formatting or missing credentials in the connection string.Complex passwords (those passwords containing special characters). Avoid these - for this lab, please keep passwords simple. Alternatively, if you must have a special character in your password, please make sure you URL Encode the password. You can use this tool to accomplish this.  Solutions:‚Äã  ","version":"Next","tagName":"h3"},{"title":"1. Verify the Atlas Connection String‚Äã","type":1,"pageTitle":"‚ÑπÔ∏è Connection Issues","url":"/intro-lab/docs/troubleshooting/connection-string-issues#1-verify-the-atlas-connection-string","content":" Step-by-Step Guide:  Access Your Atlas Cluster: Log in to your MongoDB Atlas account.Navigate to the Clusters view.Click on the Connect button for your desired cluster. Copy the Connection String: In the Connect to Cluster dialog, select the &quot;Connect your application&quot; option. Ensure the connection string is for &quot;Standard connection string (SRV)&quot; format. Copy the provided connection string. It should look something like this: mongodb+srv://&lt;username&gt;:&lt;password&gt;@cluster0.mongodb.net/&lt;dbname&gt;?retryWrites=true&amp;w=majority  ","version":"Next","tagName":"h3"},{"title":"2. Configure the Connection String in Your Application‚Äã","type":1,"pageTitle":"‚ÑπÔ∏è Connection Issues","url":"/intro-lab/docs/troubleshooting/connection-string-issues#2-configure-the-connection-string-in-your-application","content":" Step-by-Step Guide:  Locate Configuration File: Open the .env file for your Library Management Application. Update the .env File: Paste the connection string into the .env file, replacing the placeholder values (&lt;username&gt;, &lt;password&gt;, &lt;dbname&gt;) with your actual MongoDB Atlas credentials and database name. Example of a correctly formatted .env file: PORT=5000 DATABASE_URI=mongodb+srv://yourUsername:yourPassword@cluster0.mongodb.net DATABASE_NAME=library SECRET=yourSecret Save and Restart: Save the .env file.Restart your application to apply the changes.  ","version":"Next","tagName":"h3"},{"title":"3. Check for Common Errors in Connection String‚Äã","type":1,"pageTitle":"‚ÑπÔ∏è Connection Issues","url":"/intro-lab/docs/troubleshooting/connection-string-issues#3-check-for-common-errors-in-connection-string","content":" Step-by-Step Guide:  Validate Credentials: Ensure the username and password in the connection string are correct.Verify that the user has the necessary permissions to access the database. Format Verification: Ensure the connection string follows the correct format: mongodb+srv://username:password@cluster.mongodb.net Common mistakes include: Missing mongodb+srv:// at the beginning.Incorrect placement of colons : and at-sign @.Spaces or typos within the string. Network Access: Ensure your IP address is whitelisted in the Atlas Network Access settings.Navigate to Network Access in the Atlas UI and add your current IP address if it‚Äôs not already listed.  ","version":"Next","tagName":"h3"},{"title":"4. Test the Connection‚Äã","type":1,"pageTitle":"‚ÑπÔ∏è Connection Issues","url":"/intro-lab/docs/troubleshooting/connection-string-issues#4-test-the-connection","content":" Step-by-Step Guide:  Run a Connection Test: Use a MongoDB client (e.g., MongoDB Compass, mongo shell) to test the connection string.If the connection is successful, it confirms that the string is correctly formatted. Review Error Messages: Check the logs of your Library Management Application for any error messages.Common errors might indicate issues like &quot;Authentication failed,&quot; &quot;Network timeout,&quot; or &quot;Unknown host.&quot;  ","version":"Next","tagName":"h3"},{"title":"Resources and Further Assistance‚Äã","type":1,"pageTitle":"‚ÑπÔ∏è Connection Issues","url":"/intro-lab/docs/troubleshooting/connection-string-issues#resources-and-further-assistance","content":" MongoDB Atlas Documentation: Connect to Your ClusterLibrary Management Application Loader Script: Loader Script  ","version":"Next","tagName":"h3"},{"title":"Summary‚Äã","type":1,"pageTitle":"‚ÑπÔ∏è Connection Issues","url":"/intro-lab/docs/troubleshooting/connection-string-issues#summary","content":" In this section, you explored commonly occuring connection issues and their resolutions. Don't hesitate to ask the instructor for assistance if these solutions do not resolve the problem. ","version":"Next","tagName":"h2"},{"title":"‚ÑπÔ∏è GitHub Codespaces Issues","type":0,"sectionRef":"#","url":"/intro-lab/docs/troubleshooting/github-codespaces-wont-launch copy","content":"","keywords":"","version":"Next"},{"title":"1. Ports Not Made Public‚Äã","type":1,"pageTitle":"‚ÑπÔ∏è GitHub Codespaces Issues","url":"/intro-lab/docs/troubleshooting/github-codespaces-wont-launch copy#1-ports-not-made-public","content":" Step-by-Step Guide:  Check Port Visibility Settings: Open your Codespace.Click on the Ports tab in the lower panel.Locate the ports you need to make public (e.g., 5000, 4200). Make Ports Public: Click on the lock icon next to the port number to change it from private to public.Ensure the status changes to public. Verify Application Configuration: Ensure your application is configured to listen on the correct ports. Check your application‚Äôs settings to make sure it‚Äôs set to bind to all network interfaces. For example, in a Node.js application: javascript Copy code const PORT = process.env.PORT || 5000; app.listen(PORT, '0.0.0.0', () =&gt; { console.log(`Server running on port ${PORT}`); });  ","version":"Next","tagName":"h3"},{"title":"2. Authentication Issues‚Äã","type":1,"pageTitle":"‚ÑπÔ∏è GitHub Codespaces Issues","url":"/intro-lab/docs/troubleshooting/github-codespaces-wont-launch copy#2-authentication-issues","content":" Step-by-Step Guide:  Check GitHub Authentication: Ensure you are logged into GitHub from your Codespace.Run gh auth status to verify authentication status.If not authenticated, run gh auth login and follow the prompts to log in. Access Permissions: Verify that you have the necessary permissions to access the repository.Check if you are part of the correct team or organization that owns the repository.  ","version":"Next","tagName":"h3"},{"title":"3. Environment Setup Problems‚Äã","type":1,"pageTitle":"‚ÑπÔ∏è GitHub Codespaces Issues","url":"/intro-lab/docs/troubleshooting/github-codespaces-wont-launch copy#3-environment-setup-problems","content":" Step-by-Step Guide:  Check Devcontainer Configuration: Ensure your .devcontainer/devcontainer.json file is correctly configured. Example configuration: json Copy code { &quot;name&quot;: &quot;My Codespace&quot;, &quot;image&quot;: &quot;mcr.microsoft.com/vscode/devcontainers/base:0-focal&quot;, &quot;features&quot;: { &quot;ghcr.io/devcontainers/features/docker-outside-of-docker:1&quot;: {} }, &quot;forwardPorts&quot;: [5000, 4200] } Rebuild Codespace: Sometimes rebuilding the Codespace can resolve setup issues.Open the Command Palette (Ctrl+Shift+P), search for Codespaces: Rebuild Container, and select it.  ","version":"Next","tagName":"h3"},{"title":"4. Slow or Unresponsive Codespace‚Äã","type":1,"pageTitle":"‚ÑπÔ∏è GitHub Codespaces Issues","url":"/intro-lab/docs/troubleshooting/github-codespaces-wont-launch copy#4-slow-or-unresponsive-codespace","content":" Step-by-Step Guide:  Monitor Resource Usage: Check the resource usage of your Codespace.Open the terminal and use commands like top or htop to monitor CPU and memory usage. Adjust Machine Type: If your Codespace is consistently slow, consider upgrading to a more powerful machine type.You can do this from the Codespace configuration settings on GitHub.  ","version":"Next","tagName":"h3"},{"title":"5. Errors During Application Startup‚Äã","type":1,"pageTitle":"‚ÑπÔ∏è GitHub Codespaces Issues","url":"/intro-lab/docs/troubleshooting/github-codespaces-wont-launch copy#5-errors-during-application-startup","content":" Step-by-Step Guide:  Review Logs: Check the application logs for errors.Open the terminal in your Codespace and review the output of your application‚Äôs startup command. Common Errors and Fixes: Port Already in Use: Ensure no other processes are using the required ports.Use lsof -i :5000 or lsof -i :4200 to check for processes using these ports and kill them if necessary. Missing Environment Variables: Ensure all necessary environment variables are set.Add them to your .env file or set them directly in the Codespace settings.  ","version":"Next","tagName":"h3"},{"title":"Additional Resources and Support‚Äã","type":1,"pageTitle":"‚ÑπÔ∏è GitHub Codespaces Issues","url":"/intro-lab/docs/troubleshooting/github-codespaces-wont-launch copy#additional-resources-and-support","content":" GitHub Codespaces Documentation: GitHub CodespacesGitHub CLI Authentication: gh auth loginCommon Environment Setup: Devcontainer Features  ","version":"Next","tagName":"h3"},{"title":"Summary‚Äã","type":1,"pageTitle":"‚ÑπÔ∏è GitHub Codespaces Issues","url":"/intro-lab/docs/troubleshooting/github-codespaces-wont-launch copy#summary","content":" In this section, you explored commonly occuring github codespaces issues and their resolutions. Don't hesitate to ask the instructor for assistance if these solutions do not resolve the problem. ","version":"Next","tagName":"h2"},{"title":"‚ÑπÔ∏è Search Problems","type":0,"sectionRef":"#","url":"/intro-lab/docs/troubleshooting/no-search-results-appearing","content":"","keywords":"","version":"Next"},{"title":"1. Forgetting to Create the Atlas Search Index‚Äã","type":1,"pageTitle":"‚ÑπÔ∏è Search Problems","url":"/intro-lab/docs/troubleshooting/no-search-results-appearing#1-forgetting-to-create-the-atlas-search-index","content":" Step-by-Step Guide:  Access MongoDB Atlas: Log in to your MongoDB Atlas account.Navigate to your cluster and select the Collections tab. Create the Search Index: Select the database and collection where you want to create the search index.Click on the Indexes tab and then on Create Index.Choose Search Index from the index type options. Configure the Index: Provide a meaningful name for your search index (e.g., fulltextsearch).Configure the index fields as needed for your application. Save and Build the Index: Save the configuration and allow MongoDB Atlas to build the search index.  ","version":"Next","tagName":"h3"},{"title":"2. Misnaming the Search Index‚Äã","type":1,"pageTitle":"‚ÑπÔ∏è Search Problems","url":"/intro-lab/docs/troubleshooting/no-search-results-appearing#2-misnaming-the-search-index","content":" Step-by-Step Guide:  Verify the Search Index Name: Ensure that the search index name used in your application configuration matches the name in MongoDB Atlas.Commonly recommended name: fulltextsearch. Correct the Index Name if Necessary: If the index was named incorrectly, you can either rename it in your Atlas UI or update your application configuration to match the correct name. Update Application Configuration: Ensure your application‚Äôs code or configuration file references the correct search index name. Example configuration in a .env file: SEARCH_INDEX_NAME=fulltextsearch  ","version":"Next","tagName":"h3"},{"title":"3. Configuring the Application with an Incorrectly Named Search Index‚Äã","type":1,"pageTitle":"‚ÑπÔ∏è Search Problems","url":"/intro-lab/docs/troubleshooting/no-search-results-appearing#3-configuring-the-application-with-an-incorrectly-named-search-index","content":" Step-by-Step Guide:  Check the Application Configuration: Open the configuration file where the search index name is specified (commonly .env or a settings file in your application).Verify that the SEARCH_INDEX_NAME matches the index name in your MongoDB Atlas cluster. Update the Configuration: If the name is incorrect, update it to match the exact name used in MongoDB Atlas. Example: SEARCH_INDEX_NAME=fulltextsearch Restart the Application: Save the configuration file.Restart your application to apply the changes.  ","version":"Next","tagName":"h3"},{"title":"4. Additional Common Configuration Issues‚Äã","type":1,"pageTitle":"‚ÑπÔ∏è Search Problems","url":"/intro-lab/docs/troubleshooting/no-search-results-appearing#4-additional-common-configuration-issues","content":" Step-by-Step Guide:  Verify Field Mappings: Ensure the fields specified in the search index configuration match the fields in your documents.Check for any typos or discrepancies in field names. Check for Case Sensitivity: MongoDB field names and index names are case-sensitive. Ensure consistency in naming conventions. Review Index Configuration: Access the index configuration in MongoDB Atlas and review settings such as analyzers and field types.Ensure that the settings align with your application‚Äôs search requirements.  ","version":"Next","tagName":"h3"},{"title":"Testing the Search Configuration‚Äã","type":1,"pageTitle":"‚ÑπÔ∏è Search Problems","url":"/intro-lab/docs/troubleshooting/no-search-results-appearing#testing-the-search-configuration","content":" Step-by-Step Guide:  Run a Sample Query: Test the search functionality directly in MongoDB Atlas using the Aggregation Pipeline Builder.Example aggregation pipeline: [ { &quot;$search&quot;: { &quot;index&quot;: &quot;fulltextsearch&quot;, &quot;text&quot;: { &quot;query&quot;: &quot;sample text&quot;, &quot;path&quot;: &quot;field_name&quot; } } } ] ``` Check Application Logs: Review your application logs for any error messages related to search queries.Common errors might indicate issues like &quot;index not found&quot; or &quot;field not indexed&quot;.  ","version":"Next","tagName":"h3"},{"title":"Resources and Further Assistance‚Äã","type":1,"pageTitle":"‚ÑπÔ∏è Search Problems","url":"/intro-lab/docs/troubleshooting/no-search-results-appearing#resources-and-further-assistance","content":" MongoDB Atlas Search Documentation: Atlas SearchCreating and Managing Search Indexes: Create IndexesAggregation Pipeline Builder: Pipeline Builder  ","version":"Next","tagName":"h3"},{"title":"Summary‚Äã","type":1,"pageTitle":"‚ÑπÔ∏è Search Problems","url":"/intro-lab/docs/troubleshooting/no-search-results-appearing#summary","content":" In this section, you explored commonly occuring github codespaces issues and their resolutions. Don't hesitate to ask the instructor for assistance if these solutions do not resolve the problem. ","version":"Next","tagName":"h2"}],"options":{"id":"default"}}