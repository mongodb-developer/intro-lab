"use strict";(self.webpackChunkintro_lab=self.webpackChunkintro_lab||[]).push([["8486"],{3770:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>d,toc:()=>h,default:()=>p,metadata:()=>t,assets:()=>u,contentTitle:()=>c});var t=JSON.parse('{"id":"indexing/create-compound-index","title":"\u{1F450} Build a compound index following the ESR rule","description":"In this exercise, you will build a compound index following the ESR rule, compare the query explain plans before and after creating the index, and analyze them.","source":"@site/docs/70-indexing/1-create-compound-index.mdx","sourceDirName":"70-indexing","slug":"/indexing/create-compound-index","permalink":"/intro-lab/docs/indexing/create-compound-index","draft":false,"unlisted":false,"editUrl":"https://github.com/mongodb-developer/intro-lab/blob/main/docs/70-indexing/1-create-compound-index.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Indexing","permalink":"/intro-lab/docs/category/indexing"},"next":{"title":"Optimize the Application","permalink":"/intro-lab/docs/category/optimize-the-application"}}'),i=r(5893),s=r(65),o=r(1424),a=r(7902),l=r(5525);let d={},c="\u{1F450} Build a compound index following the ESR rule",u={},h=[{value:"Explore the code",id:"explore-the-code",level:2},{value:"Verify that the index is created",id:"verify-that-the-index-is-created",level:2},{value:"\u{1F9B8}\u200D\u2640\uFE0F Try different indexes",id:"\uFE0F-try-different-indexes",level:2}];function x(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"-build-a-compound-index-following-the-esr-rule",children:"\u{1F450} Build a compound index following the ESR rule"})}),"\n",(0,i.jsx)(n.p,{children:"In this exercise, you will build a compound index following the ESR rule, compare the query explain plans before and after creating the index, and analyze them."}),"\n",(0,i.jsx)(n.h2,{id:"explore-the-code",children:"Explore the code"}),"\n",(0,i.jsxs)(a.Z,{groupId:"server",children:[(0,i.jsx)(l.Z,{value:"node",label:"\u{1F680} NodeJS/Express",children:(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Open the file ",(0,i.jsx)(n.code,{children:"server/src/indexing/borrowed-books-index.ts"})," file in your GitHub Codespace."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Examine the code to build a compound index on the ",(0,i.jsx)(n.code,{children:"issueDetails"})," collection."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n* Create the index to support the following query:\n* issueDetails.find({\n*    'user._id': userID,\n*   borrowDate: { $gte: date },\n* }, {\n*  sort: { returnedDate: -1 }\n* })\n*/\nawait collections?.issueDetails?.createIndex({\n    // Equality\n    'user._id': 1,\n    // Sort\n    returnedDate: 1,\n    // Range\n    borrowDate: 1,\n});\n"})}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["The index is created on the ",(0,i.jsx)(n.code,{children:"issueDetails"})," collection to support the query that finds the issue details for a user with a specific ",(0,i.jsx)(n.code,{children:"userID"}),", where the ",(0,i.jsx)(n.code,{children:"borrowDate"})," is greater than or equal to a specific ",(0,i.jsx)(n.code,{children:"date"}),", and sorts the results by ",(0,i.jsx)(n.code,{children:"returnedDate"})," in descending order."]}),(0,i.jsx)(n.p,{children:"This is compound index and it follows the ESR rule: Equality, Sort, and Range. This ensures optimal performance for the query."})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Execute the script to create the compound index."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"npx tsx src/indexing/borrowed-books-index.ts\n"})}),"\n",(0,i.jsx)(n.p,{children:"After a few seconds, you should see the following output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Connecting to MongoDB Atlas...\nConnected!\n\nBEFORE creating the index\n\nWinning plan stage: COLLSCAN\nNo index used\nTotal documents examined: 1284\nNumber of documents returned: 3\n\n-----------------------------\n\nAFTER creating the index\n\nWinning plan stage: IXSCAN\nIndex used: user._id_1_returnedDate_1_borrowDate_1\nTotal documents examined: 3\nNumber of documents returned: 3\n"})}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["The script uses ",(0,i.jsx)(n.a,{href:"https://docs.mongodb.com/manual/reference/method/cursor.explain/",children:"explain plans"})," to compare the query plans before and after creating the index."]}),(0,i.jsx)(n.p,{children:"Notice the difference in the winning plan stage and the number of documents examined before and after creating the index."})]}),"\n"]}),"\n"]})}),(0,i.jsxs)(l.Z,{value:"java",label:"\u2615\uFE0F Java Spring Boot",children:[(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Let\u2019s start with our ",(0,i.jsx)(n.code,{children:"IssueDetail"})," record. Right now, it looks like this:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",metastring:"title='src/main/java/com/mongodb/devrel/library/domain/model/IssueDetail.java'",children:'@Document(collection = "issueDetails")\npublic record IssueDetail(\n    // fields ..\n) {}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Now let\u2019s optimize queries that need to filter or sort by multiple fields.\nFor example, we often query by ",(0,i.jsx)(n.code,{children:"user._id"}),", ",(0,i.jsx)(n.code,{children:"returnedDate"}),", and ",(0,i.jsx)(n.code,{children:"borrowDate"})," together.\nTo speed this up, we can add a compound index using the ",(0,i.jsx)(n.strong,{children:"@CompoundIndex"})," annotation."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-kotlin",metastring:"title='src/main/java/com/mongodb/devrel/library/domain/model/IssueDetail.java' ",children:" @Document(collection = \"issueDetails\")\n @CompoundIndex(\n         name = \"user_returned_borrow_idx\", \n         def = \"{'user._id': 1, 'returnedDate': 1, 'borrowDate': 1}\")\n public record IssueDetail(\n     // fields\n ){}\n"})}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["The index is created on the ",(0,i.jsx)(n.code,{children:"issueDetails"})," collection to support the query that finds the issue details for a user with a specific ",(0,i.jsx)(n.code,{children:"userID"}),", where the ",(0,i.jsx)(n.code,{children:"borrowDate"})," is greater than or equal to a specific ",(0,i.jsx)(n.code,{children:"date"}),", and sorts the results by ",(0,i.jsx)(n.code,{children:"returnedDate"})," in descending order."]}),(0,i.jsx)(n.p,{children:"This is compound index and it follows the ESR rule: Equality, Sort, and Range. This ensures optimal performance for the query."})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Open the ",(0,i.jsx)(n.code,{children:"application.yml"})," and include the property ",(0,i.jsx)(n.code,{children:"auto-index-creation: true"}),". At the end, your configuration will look like this:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:"title='src/main/resources/application.yml'",children:"spring:\n  data:\n    mongodb:\n      uri: ${MONGODB_URI}\n      database: library\n      auto-index-creation: true\n"})}),"\n"]}),"\n"]}),(0,i.jsxs)(n.p,{children:["This ensures that any indexes defined in your domain models (for example, with ",(0,i.jsx)(n.code,{children:"@Indexed"}),") will be created automatically by Spring Data MongoDB at startup."]}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Stop the running app."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Locate the bottom panel and click on the ",(0,i.jsx)(n.code,{children:"TERMINAL"})," tab."]}),"\n",(0,i.jsx)(n.li,{children:"Press Ctrl+C/Cmd+c to interrupt the running app"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Restart the app typing in the Terminal:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"mvn spring-boot:run\n"})}),"\n"]}),"\n"]}),(0,i.jsx)(n.p,{children:"As soon as the application starts, you will see log entries showing the creation of indexes, similar to the image below."}),(0,i.jsx)(o.Z,{url:"https://github.com/mongodb-developer/library-management-system",src:"img/screenshots/70-indexing/1-index-creation.png",alt:"Spring Index creation"})]})]}),"\n",(0,i.jsx)(n.h2,{id:"verify-that-the-index-is-created",children:"Verify that the index is created"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Open the ",(0,i.jsx)(n.strong,{children:"VS Code extension"})," (leaf icon) from the sidebar on the left."]}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"Add Connection"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["In the welcome screen, click ",(0,i.jsx)(n.strong,{children:"Connect"})," under the ",(0,i.jsx)(n.strong,{children:"Connect with Connection String"})," section."]}),"\n",(0,i.jsxs)(n.li,{children:["Enter the MongoDB connection string from your Atlas cluster, making sure to replace the ",(0,i.jsx)(n.strong,{children:"password placeholder"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Press ",(0,i.jsx)(n.strong,{children:"Enter"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["In the sidebar, you should now see your database. Expand the ",(0,i.jsx)(n.strong,{children:"library"})," database, then the ",(0,i.jsx)(n.strong,{children:"issueDetails"})," collection, and finally select ",(0,i.jsx)(n.strong,{children:"Indexes"}),"."]}),"\n"]}),"\n",(0,i.jsx)(o.Z,{url:"https://github.com/mongodb-developer/library-management-system",src:"img/screenshots/70-indexing/2-index-vscode.png",alt:"VS Code Extension showing the collection indexes"}),"\n",(0,i.jsx)(n.h2,{id:"\uFE0F-try-different-indexes",children:"\u{1F9B8}\u200D\u2640\uFE0F Try different indexes"}),"\n",(0,i.jsx)(n.p,{children:"Modify the compound index by adding and removing fields, and observe the changes in the query explain plans."})]})}function p(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}},5525:function(e,n,r){r.d(n,{Z:()=>s});var t=r(5893);r(7294);var i=r(4904);function s({children:e,hidden:n,className:r}){return(0,t.jsx)("div",{role:"tabpanel",className:(0,i.Z)("tabItem_Ymn6",r),hidden:n,children:e})}},7902:function(e,n,r){r.d(n,{Z:()=>j});var t=r(5893),i=r(7294),s=r(4904),o=r(9599),a=r(6550),l=r(2e3),d=r(4520),c=r(8341),u=r(6009);function h(e){return i.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function x({value:e,tabValues:n}){return n.some(n=>n.value===e)}var p=r(7227);function m({className:e,block:n,selectedValue:r,selectValue:i,tabValues:a}){let l=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),c=e=>{let n=e.currentTarget,t=a[l.indexOf(n)].value;t!==r&&(d(n),i(t))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{let r=l.indexOf(e.currentTarget)+1;n=l[r]??l[0];break}case"ArrowLeft":{let r=l.indexOf(e.currentTarget)-1;n=l[r]??l[l.length-1]}}n?.focus()};return(0,t.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":n},e),children:a.map(({value:e,label:n,attributes:i})=>(0,t.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:e=>{l.push(e)},onKeyDown:u,onClick:c,...i,className:(0,s.Z)("tabs__item","tabItem_LNqP",i?.className,{"tabs__item--active":r===e}),children:n??e},e))})}function f({lazy:e,children:n,selectedValue:r}){let o=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){let e=o.find(e=>e.props.value===r);return e?(0,i.cloneElement)(e,{className:(0,s.Z)("margin-top--md",e.props.className)}):null}return(0,t.jsx)("div",{className:"margin-top--md",children:o.map((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==r}))})}function g(e){let n=function(e){let{defaultValue:n,queryString:r=!1,groupId:t}=e,s=function(e){let{values:n,children:r}=e;return(0,i.useMemo)(()=>{let e=n??h(r).map(({props:{value:e,label:n,attributes:r,default:t}})=>({value:e,label:n,attributes:r,default:t})),t=(0,c.lx)(e,(e,n)=>e.value===n.value);if(t.length>0)throw Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[n,r])}(e),[o,p]=(0,i.useState)(()=>(function({defaultValue:e,tabValues:n}){if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!x({value:e,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let r=n.find(e=>e.default)??n[0];if(!r)throw Error("Unexpected error: 0 tabValues");return r.value})({defaultValue:n,tabValues:s})),[m,f]=function({queryString:e=!1,groupId:n}){let r=(0,a.k6)(),t=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,d._X)(t),(0,i.useCallback)(e=>{if(!t)return;let n=new URLSearchParams(r.location.search);n.set(t,e),r.replace({...r.location,search:n.toString()})},[t,r])]}({queryString:r,groupId:t}),[g,j]=function({groupId:e}){let n=e?`docusaurus.tab.${e}`:null,[r,t]=(0,u.Nk)(n);return[r,(0,i.useCallback)(e=>{n&&t.set(e)},[n,t])]}({groupId:t}),b=(()=>{let e=m??g;return x({value:e,tabValues:s})?e:null})();return(0,l.Z)(()=>{b&&p(b)},[b]),{selectedValue:o,selectValue:(0,i.useCallback)(e=>{if(!x({value:e,tabValues:s}))throw Error(`Can't select invalid tab value=${e}`);p(e),f(e),j(e)},[f,j,s]),tabValues:s}}(e);return(0,t.jsxs)("div",{className:(0,s.Z)("tabs-container","tabList__CuJ"),children:[(0,t.jsx)(m,{...n,...e}),(0,t.jsx)(f,{...n,...e})]})}function j(e){let n=(0,p.Z)();return(0,t.jsx)(g,{...e,children:h(e.children)},String(n))}},1424:function(e,n,r){r.d(n,{Z:()=>o});var t=r(5893);function i(e){let n=e.url||"http://localhost:3000";return(0,t.jsxs)("div",{className:"browser container",children:[(0,t.jsxs)("div",{className:"row",children:[(0,t.jsxs)("div",{className:"column left",children:[(0,t.jsx)("span",{className:"dot",style:{background:"#ED594A"}}),(0,t.jsx)("span",{className:"dot",style:{background:"#FDD800"}}),(0,t.jsx)("span",{className:"dot",style:{background:"#5AC05A"}})]}),(0,t.jsx)("div",{className:"column middle",children:(0,t.jsx)("input",{type:"text",value:n})}),(0,t.jsx)("div",{className:"column right",children:(0,t.jsxs)("div",{style:{float:"right"},children:[(0,t.jsx)("span",{className:"bar"}),(0,t.jsx)("span",{className:"bar"}),(0,t.jsx)("span",{className:"bar"})]})})]}),(0,t.jsx)("div",{className:"content",children:e.children})]})}r(7294);var s=r(4757);function o(e){return(0,t.jsx)(i,{...e,children:(0,t.jsx)("img",{src:(0,s.ZP)(e.src),alt:e.alt})})}},65:function(e,n,r){r.d(n,{Z:()=>a,a:()=>o});var t=r(7294);let i={},s=t.createContext(i);function o(e){let n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);