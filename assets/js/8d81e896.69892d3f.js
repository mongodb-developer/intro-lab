"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[88],{5675:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>r});var s=t(4848),i=t(8453);const o={},l="\ud83d\udc50 Enable Validation for the Users Collection",a={id:"schema-validation/validate-users",title:"\ud83d\udc50 Enable Validation for the Users Collection",description:"In this exercise, you will explore the pre-written JSON validation schema for the users collection, run a script to apply it to the collection, and test the schema validation by inserting a document that does not match the schema.",source:"@site/docs/60-schema-validation/2-validate-users.mdx",sourceDirName:"60-schema-validation",slug:"/schema-validation/validate-users",permalink:"/intro-lab/docs/schema-validation/validate-users",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb-developer/intro-lab/blob/main/docs/60-schema-validation/2-validate-users.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udcd8 What is Schema Validation, and Why Use It?",permalink:"/intro-lab/docs/schema-validation/what-is-schema-validation"},next:{title:"\ud83e\uddb8\u200d\u2640\ufe0f Enable Validation for the Authors Collection",permalink:"/intro-lab/docs/schema-validation/validate-authors"}},c={},r=[{value:"Database user permissions",id:"database-user-permissions",level:2},{value:"Explore the JSON schema",id:"explore-the-json-schema",level:2},{value:"Explore the script to apply the schema",id:"explore-the-script-to-apply-the-schema",level:2},{value:"Apply the schema to the <code>users</code> collection",id:"apply-the-schema-to-the-users-collection",level:2},{value:"Test the schema validation",id:"test-the-schema-validation",level:2},{value:"Summary",id:"summary",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"-enable-validation-for-the-users-collection",children:"\ud83d\udc50 Enable Validation for the Users Collection"}),"\n",(0,s.jsxs)(n.p,{children:["In this exercise, you will explore the pre-written JSON validation schema for the ",(0,s.jsx)(n.code,{children:"users"})," collection, run a script to apply it to the collection, and test the schema validation by inserting a document that does not match the schema."]}),"\n",(0,s.jsx)(n.h2,{id:"database-user-permissions",children:"Database user permissions"}),"\n",(0,s.jsx)(n.p,{children:"To update the validator for any database collection, your database user must have admin privileges. Follow these steps to ensure your user has the correct permissions:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Open the ",(0,s.jsx)(n.a,{href:"https://cloud.mongodb.com?utm_campaign=devrel&utm_source=workshop&utm_medium=cta&utm_content=developer.day&utm_term=project.phoenix",children:"Atlas UI"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["In the left-hand menu, navigate to ",(0,s.jsx)(n.strong,{children:"Network Settings"}),' and select "Database Access."']}),"\n",(0,s.jsxs)(n.li,{children:["Locate your database user in the list. Check the ",(0,s.jsx)(n.strong,{children:"MongoDB Roles"})," column for the role of the user you are using for this workshop. If the role is not ",(0,s.jsx)(n.strong,{children:"atlasAdmin@admin"}),", you will need to update it."]}),"\n",(0,s.jsxs)(n.li,{children:["If the role is not ",(0,s.jsx)(n.strong,{children:"atlasAdmin@admin"}),', click "Edit" button next to the user.']}),"\n",(0,s.jsxs)(n.li,{children:["Scroll down to the ",(0,s.jsx)(n.strong,{children:"Database User Privileges"})," section and expand the ",(0,s.jsx)(n.strong,{children:"Built-in Role"})," dropdown."]}),"\n",(0,s.jsx)(n.li,{children:'Select "Atlas admin" from the dropdown menu.'}),"\n",(0,s.jsx)(n.li,{children:'Click "Update User" to save the changes.'}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Atlas will deploy the change in a few seconds."}),"\n",(0,s.jsx)(n.h2,{id:"explore-the-json-schema",children:"Explore the JSON schema"}),"\n",(0,s.jsxs)(n.p,{children:["The JSON schema for the ",(0,s.jsx)(n.code,{children:"users"})," collection is stored in the ",(0,s.jsx)(n.code,{children:"server/src/schema-validation/apply-schema.ts"})," ",(0,s.jsx)(n.a,{href:"https://github.com/mongodb-developer/library-management-system/blob/main/server/src/schema-validation/apply-schema.ts",children:"file"}),". Open the file in your GitHub codespace and examine the schema."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const userSchema = {\n    bsonType: 'object',\n    required: ['name', 'isAdmin'],\n    properties: {\n        name: {\n            bsonType: 'string',\n            minLength: 5,\n            description: 'must be a string and is required'\n        },\n        isAdmin: {\n            bsonType: 'bool',\n            description: 'must be a boolean and is required'\n        }\n    }\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:"The schema defines the following constraints:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The required fields are ",(0,s.jsx)(n.code,{children:"name"})," and ",(0,s.jsx)(n.code,{children:"isAdmin"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"name"})," field must be a string with a minimum length of five characters."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"isAdmin"})," field must be a boolean."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"explore-the-script-to-apply-the-schema",children:"Explore the script to apply the schema"}),"\n",(0,s.jsxs)(n.p,{children:["Examine the lines immediately following the schema definition in the ",(0,s.jsx)(n.code,{children:"apply-schema.ts"})," file. You will see a function that applies the schema to the ",(0,s.jsx)(n.code,{children:"users"})," collection."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"console.log('Applying schema validation for users...');\nconst resultUsers = await db.command({\n    collMod: 'users',\n    validator: {\n        $jsonSchema: userSchema\n    },\n    validationLevel: 'strict',\n    validationAction: 'error'\n});\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The function uses the ",(0,s.jsx)(n.code,{children:"db.command()"})," method to apply the schema to the ",(0,s.jsx)(n.code,{children:"users"})," collection."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"collMod"})," option specifies the collection to which the schema should be applied."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"validator"})," option specifies the JSON schema to use for validation. This is the ",(0,s.jsx)(n.code,{children:"userSchema"})," object declared just above."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"validationLevel"})," option specifies the level of validation to perform. This could be ",(0,s.jsx)(n.code,{children:"strict"})," or ",(0,s.jsx)(n.code,{children:"moderate"}),".","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["If you set it to ",(0,s.jsx)(n.code,{children:"strict"}),", the document will be inserted and updated only if it passes validation."]}),"\n",(0,s.jsxs)(n.li,{children:["If you set it to ",(0,s.jsx)(n.code,{children:"moderate"}),", updates to existing documents in the collection that don't match the validation rules aren't checked for validity."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["And finally, the ",(0,s.jsx)(n.code,{children:"validationAction"})," option specifies the action to take when a document fails validation. This could be ",(0,s.jsx)(n.code,{children:"error"})," or ",(0,s.jsx)(n.code,{children:"warn"}),".","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["If you set it to ",(0,s.jsx)(n.code,{children:"error"}),", MongoDB rejects any insert or update that violates the validation criteria."]}),"\n",(0,s.jsxs)(n.li,{children:["If you set it to ",(0,s.jsx)(n.code,{children:"warn"}),", the operation proceeds, but the violation is recorded in the MongoDB log."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"apply-the-schema-to-the-users-collection",children:["Apply the schema to the ",(0,s.jsx)(n.code,{children:"users"})," collection"]}),"\n",(0,s.jsxs)(n.p,{children:["You need to run the script to apply the schema to the ",(0,s.jsx)(n.code,{children:"users"})," collection."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Open a new terminal emulator tab in your GitHub codespace."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Locate the bottom panel and click on the ",(0,s.jsx)(n.code,{children:"TERMINAL"})," tab."]}),"\n",(0,s.jsxs)(n.li,{children:["Locate the ",(0,s.jsx)(n.code,{children:"+"})," icon on the top right of the terminal panel and click on it to open a new terminal tab."]}),"\n",(0,s.jsx)(n.li,{children:"Click on the new terminal tab to activate it."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Run the following command to apply the schema to the ",(0,s.jsx)(n.code,{children:"users"})," collection:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"cd server\nnpx tsx src/schema-validation/apply-schema.ts\n\n"})}),"\n",(0,s.jsx)(n.p,{children:'You might be prompted to allow pasting into the terminal. Click "Allow" to paste the command.'}),"\n",(0,s.jsx)(n.p,{children:'Click "Enter" to run the command. After a few seconds, you should see the following output:'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"Connecting to MongoDB Atlas...\nConnected!\n\nApplying schema validation for users...\nSchema validation enabled!\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.p,{children:["If you see an error related to your user permissions, go back to the ",(0,s.jsx)(n.a,{href:"#database-user-permissions",children:"Database User Permissions"})," section and update your user permissions."]})}),"\n",(0,s.jsx)(n.h2,{id:"test-the-schema-validation",children:"Test the schema validation"}),"\n",(0,s.jsxs)(n.p,{children:["Now that the schema validation is enabled for the ",(0,s.jsx)(n.code,{children:"users"})," collection, you can test it by inserting a document that does not match the schema."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Open the file ",(0,s.jsx)(n.code,{children:"server/src/schema-validation/test-validation.ts"})," ",(0,s.jsx)(n.a,{href:"https://github.com/mongodb-developer/library-management-system/blob/main/server/src/schema-validation/test-validation.ts",children:"file"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Explore the ",(0,s.jsx)(n.code,{children:"insertOne()"})," function that will try to insert a new user and the error handling code."]}),"\n",(0,s.jsx)(n.li,{children:"Execute the script by running the following command."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npx tsx src/schema-validation/test-validation.ts\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The error describes that the ",(0,s.jsx)(n.code,{children:"name"})," and ",(0,s.jsx)(n.code,{children:"isAdmin"})," fields are required but missing in the document you tried to insert."]}),"\n",(0,s.jsxs)(n.p,{children:["Modify the script to insert a document again with the ",(0,s.jsx)(n.code,{children:"name"})," and ",(0,s.jsx)(n.code,{children:"isAdmin"})," fields and you should see the document inserted successfully."]}),"\n",(0,s.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsxs)(n.p,{children:["In this exercise, you explored the JSON schema for the ",(0,s.jsx)(n.code,{children:"users"})," collection, ran a script to apply the schema to the collection, and tested the schema validation by inserting a document that does not match the schema."]}),"\n",(0,s.jsxs)(n.p,{children:["In the next exercise, you will enable schema validation for the ",(0,s.jsx)(n.code,{children:"authors"})," collection."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var s=t(6540);const i={},o=s.createContext(i);function l(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);