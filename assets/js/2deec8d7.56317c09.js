"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[223],{7517:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var a=i(5893),t=i(1151);const s={},o="\ud83d\udcd8 What is Schema Validation, and Why?",r={id:"schema-validation/what-is-schema-validation",title:"\ud83d\udcd8 What is Schema Validation, and Why?",description:"Introduction to Schema Validation with MongoDB",source:"@site/docs/60-schema-validation/1-what-is-schema-validation.mdx",sourceDirName:"60-schema-validation",slug:"/schema-validation/what-is-schema-validation",permalink:"/intro-lab/docs/schema-validation/what-is-schema-validation",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb-developer/intro-lab/blob/main/docs/60-schema-validation/1-what-is-schema-validation.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Schema Validation",permalink:"/intro-lab/docs/category/schema-validation"},next:{title:"\ud83d\udc50 Enable validation for the users collection",permalink:"/intro-lab/docs/schema-validation/validate-users"}},l={},c=[{value:"Introduction to Schema Validation with MongoDB",id:"introduction-to-schema-validation-with-mongodb",level:2},{value:"What is Schema Validation?",id:"what-is-schema-validation",level:3},{value:"Why Use Schema Validation?",id:"why-use-schema-validation",level:3},{value:"Summary",id:"summary",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"-what-is-schema-validation-and-why",children:"\ud83d\udcd8 What is Schema Validation, and Why?"}),"\n",(0,a.jsx)(n.h2,{id:"introduction-to-schema-validation-with-mongodb",children:"Introduction to Schema Validation with MongoDB"}),"\n",(0,a.jsx)(n.p,{children:"Schema Validation is a feature in MongoDB that allows you to enforce specific rules regarding the structure of documents in a collection. This means you can ensure that all documents stored in your MongoDB collection adhere to a predefined schema, which is particularly useful for maintaining data consistency and integrity."}),"\n",(0,a.jsx)(n.h3,{id:"what-is-schema-validation",children:"What is Schema Validation?"}),"\n",(0,a.jsx)(n.p,{children:"Schema Validation in MongoDB involves defining validation rules using JSON Schema, a powerful tool for validating the structure and contents of JSON documents. These rules can specify requirements such as:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Field types:"})," Ensuring that certain fields are of a specific data type (e.g., strings, integers, arrays)."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Required fields:"})," Ensuring that certain fields must be present in all documents."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Value ranges:"})," Ensuring that numeric fields fall within specific ranges."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"String patterns:"})," Ensuring that string fields match certain regular expressions."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"why-use-schema-validation",children:"Why Use Schema Validation?"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Data Integrity:"})," By enforcing a schema, you can prevent invalid data from being inserted into your collection, thus maintaining the integrity of your dataset."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Consistency:"})," Schema validation ensures that all documents follow a consistent structure, making it easier to query and manage your data."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Error Prevention:"})," Catching schema violations at the database level helps in identifying errors early in the data entry process, reducing the chances of data-related issues later."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Simplified Application Logic:"})," With schema validation handled by the database, application developers can focus more on business logic rather than data validation."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Enhanced Collaboration:"})," For teams working on a shared database, schema validation helps ensure that all team members follow the same data structure conventions, reducing misunderstandings and errors."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,a.jsxs)(n.p,{children:["In this section, you will explore the JSON schema for the ",(0,a.jsx)(n.code,{children:"users"}),", and ",(0,a.jsx)(n.code,{children:"authors"})," collections, run a script to apply the schema to the collections, and test the schema validation by inserting a document that does not match the schema."]})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>r,a:()=>o});var a=i(7294);const t={},s=a.createContext(t);function o(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);