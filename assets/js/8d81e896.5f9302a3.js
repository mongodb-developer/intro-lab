"use strict";(self.webpackChunkintro_lab=self.webpackChunkintro_lab||[]).push([["2422"],{7856:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>r,default:()=>p,toc:()=>h,metadata:()=>s,assets:()=>d,contentTitle:()=>c});var s=JSON.parse('{"id":"schema-validation/validate-users","title":"\uD83D\uDC50 Enable Validation for the Users Collection","description":"In this exercise, you will explore the pre-written JSON validation schema for the users collection, run a script to apply it to the collection, and test the schema validation by inserting a document that does not match the schema.","source":"@site/docs/60-schema-validation/2-validate-users.mdx","sourceDirName":"60-schema-validation","slug":"/schema-validation/validate-users","permalink":"/intro-lab/docs/schema-validation/validate-users","draft":false,"unlisted":false,"editUrl":"https://github.com/mongodb-developer/intro-lab/blob/main/docs/60-schema-validation/2-validate-users.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\uD83D\uDCD8 What is Schema Validation, and Why Use It?","permalink":"/intro-lab/docs/schema-validation/what-is-schema-validation"},"next":{"title":"\uD83E\uDDB8\u200D\u2640\uFE0F Enable Validation for the Authors Collection","permalink":"/intro-lab/docs/schema-validation/validate-authors"}}'),i=t(5893),a=t(65),o=t(7902),l=t(5525);let r={},c="\uD83D\uDC50 Enable Validation for the Users Collection",d={},h=[{value:"Database user permissions",id:"database-user-permissions",level:2},{value:"Explore the JSON schema",id:"explore-the-json-schema",level:2},{value:"Explore the script to apply the schema",id:"explore-the-script-to-apply-the-schema",level:2},{value:"Apply the schema to the <code>users</code> collection",id:"apply-the-schema-to-the-users-collection",level:2},{value:"Test the schema validation",id:"test-the-schema-validation",level:2},{value:"Summary",id:"summary",level:2}];function u(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"-enable-validation-for-the-users-collection",children:"\uD83D\uDC50 Enable Validation for the Users Collection"})}),"\n",(0,i.jsxs)(n.p,{children:["In this exercise, you will explore the pre-written JSON validation schema for the ",(0,i.jsx)(n.code,{children:"users"})," collection, run a script to apply it to the collection, and test the schema validation by inserting a document that does not match the schema."]}),"\n",(0,i.jsx)(n.h2,{id:"database-user-permissions",children:"Database user permissions"}),"\n",(0,i.jsx)(n.p,{children:"To update the validator for any database collection, your database user must have admin privileges. Follow these steps to ensure your user has the correct permissions:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Open the ",(0,i.jsx)(n.a,{href:"https://cloud.mongodb.com?utm_campaign=devrel&utm_source=workshop&utm_medium=cta&utm_content=developer.day&utm_term=project.phoenix",children:"Atlas UI"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["In the left-hand menu, navigate to ",(0,i.jsx)(n.strong,{children:"Network Settings"}),' and select "Database Access."']}),"\n",(0,i.jsxs)(n.li,{children:["Locate your database user in the list. Check the ",(0,i.jsx)(n.strong,{children:"MongoDB Roles"})," column for the role of the user you are using for this workshop. If the role is not ",(0,i.jsx)(n.strong,{children:"atlasAdmin@admin"}),", you will need to update it."]}),"\n",(0,i.jsxs)(n.li,{children:["If the role is not ",(0,i.jsx)(n.strong,{children:"atlasAdmin@admin"}),', click "Edit" button next to the user.']}),"\n",(0,i.jsxs)(n.li,{children:["Scroll down to the ",(0,i.jsx)(n.strong,{children:"Database User Privileges"})," section and expand the ",(0,i.jsx)(n.strong,{children:"Built-in Role"})," dropdown."]}),"\n",(0,i.jsx)(n.li,{children:'Select "Atlas admin" from the dropdown menu.'}),"\n",(0,i.jsx)(n.li,{children:'Click "Update User" to save the changes.'}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Atlas will deploy the change in a few seconds."}),"\n",(0,i.jsx)(n.h2,{id:"explore-the-json-schema",children:"Explore the JSON schema"}),"\n",(0,i.jsxs)(o.Z,{groupId:"server",children:[(0,i.jsx)(l.Z,{value:"node",label:"\uD83D\uDE80 NodeJS/Express",children:(0,i.jsxs)(n.p,{children:["The JSON schema for the ",(0,i.jsx)(n.code,{children:"users"})," collection is stored in the ",(0,i.jsx)(n.code,{children:"server/src/schema-validation/apply-schema.ts"})," ",(0,i.jsx)(n.a,{href:"https://github.com/mongodb-developer/library-management-system/blob/main/server/src/schema-validation/apply-schema.ts",children:"file"}),". Open the file in your GitHub codespace and examine the schema."]})}),(0,i.jsx)(l.Z,{value:"java",label:"\u2615\uFE0F Java Spring Boot",children:(0,i.jsxs)(n.p,{children:["JSON schema for the ",(0,i.jsx)(n.code,{children:"users"})," collection:"]})})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const userSchema = {\n    bsonType: 'object',\n    required: ['name', 'isAdmin'],\n    properties: {\n        name: {\n            bsonType: 'string',\n            minLength: 5,\n            description: 'must be a string and is required'\n        },\n        isAdmin: {\n            bsonType: 'bool',\n            description: 'must be a boolean and is required'\n        }\n    }\n};\n"})}),"\n",(0,i.jsx)(n.p,{children:"The schema defines the following constraints:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The required fields are ",(0,i.jsx)(n.code,{children:"name"})," and ",(0,i.jsx)(n.code,{children:"isAdmin"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"name"})," field must be a string with a minimum length of five characters."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"isAdmin"})," field must be a boolean."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"explore-the-script-to-apply-the-schema",children:"Explore the script to apply the schema"}),"\n",(0,i.jsxs)(o.Z,{groupId:"server",children:[(0,i.jsxs)(l.Z,{value:"node",label:"\uD83D\uDE80 NodeJS/Express",children:[(0,i.jsxs)(n.p,{children:["Examine the lines immediately following the schema definition in the ",(0,i.jsx)(n.code,{children:"apply-schema.ts"})," file. You will see a function that applies the schema to the ",(0,i.jsx)(n.code,{children:"users"})," collection."]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"console.log('Applying schema validation for users...');\nconst resultUsers = await db.command({\n    collMod: 'users',\n    validator: {\n        $jsonSchema: userSchema\n    },\n    validationLevel: 'strict',\n    validationAction: 'error'\n});\n"})}),(0,i.jsxs)(n.p,{children:["The function uses the ",(0,i.jsx)(n.code,{children:"db.command()"})," method to apply the schema to the ",(0,i.jsx)(n.code,{children:"users"})," collection."]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"collMod"})," option specifies the collection to which the schema should be applied."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"validator"})," option specifies the JSON schema to use for validation. This is the ",(0,i.jsx)(n.code,{children:"userSchema"})," object declared just above."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"validationLevel"})," option specifies the level of validation to perform. This could be ",(0,i.jsx)(n.code,{children:"strict"})," or ",(0,i.jsx)(n.code,{children:"moderate"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If you set it to ",(0,i.jsx)(n.code,{children:"strict"}),", the document will be inserted and updated only if it passes validation."]}),"\n",(0,i.jsxs)(n.li,{children:["If you set it to ",(0,i.jsx)(n.code,{children:"moderate"}),", updates to existing documents in the collection that don't match the validation rules aren't checked for validity."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["And finally, the ",(0,i.jsx)(n.code,{children:"validationAction"})," option specifies the action to take when a document fails validation. This could be ",(0,i.jsx)(n.code,{children:"error"})," or ",(0,i.jsx)(n.code,{children:"warn"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If you set it to ",(0,i.jsx)(n.code,{children:"error"}),", MongoDB rejects any insert or update that violates the validation criteria."]}),"\n",(0,i.jsxs)(n.li,{children:["If you set it to ",(0,i.jsx)(n.code,{children:"warn"}),", the operation proceeds, but the violation is recorded in the MongoDB log."]}),"\n"]}),"\n"]}),"\n"]})]}),(0,i.jsx)(l.Z,{value:"java",label:"\u2615\uFE0F Java Spring Boot",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public void applySchemaValidation() {\n    try (MongoClient mongoClient = MongoClients.create(mongoDBURI)) {\n        MongoDatabase database = mongoClient.getDatabase("library");\n        \n        Document userSchema = new Document("$jsonSchema", new Document()\n            .append("bsonType", "object")\n            .append("required", List.of("name", "isAdmin"))\n            .append("properties", new Document()\n                .append("name", new Document("bsonType", "string").append("minLength", 5)\n                    .append("description", "must be a string and is required"))\n                .append("isAdmin", new Document("bsonType", "bool")\n                    .append("description", "must be a boolean and is required"))\n            )\n        );\n\n        Document command = new Document("collMod", "users")\n            .append("validator", userSchema)\n            .append("validationLevel", "strict")\n            .append("validationAction", "error");\n        \n        Document result = database.runCommand(command);\n        \n        if (result.getDouble("ok") != 1.0) {\n            System.err.println("Failed to enable schema validation!");\n            System.exit(1);\n        } else {\n            System.out.println("Schema validation enabled!");\n        }\n    }\n}\n'})})})]}),"\n",(0,i.jsxs)(n.h2,{id:"apply-the-schema-to-the-users-collection",children:["Apply the schema to the ",(0,i.jsx)(n.code,{children:"users"})," collection"]}),"\n",(0,i.jsxs)(o.Z,{groupId:"server",children:[(0,i.jsxs)(l.Z,{value:"node",label:"\uD83D\uDE80 NodeJS/Express",children:[(0,i.jsxs)(n.p,{children:["You need to run the script to apply the schema to the ",(0,i.jsx)(n.code,{children:"users"})," collection."]}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Open a new terminal emulator tab in your GitHub codespace."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Locate the bottom panel and click on the ",(0,i.jsx)(n.code,{children:"TERMINAL"})," tab."]}),"\n",(0,i.jsxs)(n.li,{children:["Locate the ",(0,i.jsx)(n.code,{children:"+"})," icon on the top right of the terminal panel and click on it to open a new terminal tab."]}),"\n",(0,i.jsx)(n.li,{children:"Click on the new terminal tab to activate it."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Run the following command to apply the schema to the ",(0,i.jsx)(n.code,{children:"users"})," collection:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"cd server\nnpx tsx src/schema-validation/apply-schema.ts\n\n"})}),"\n",(0,i.jsx)(n.p,{children:'You might be prompted to allow pasting into the terminal. Click "Allow" to paste the command.'}),"\n",(0,i.jsx)(n.p,{children:'Click "Enter" to run the command. After a few seconds, you should see the following output:'}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"Connecting to MongoDB Atlas...\nConnected!\n\nApplying schema validation for users...\nSchema validation enabled!\n"})}),"\n"]}),"\n"]})]}),(0,i.jsx)(l.Z,{value:"java",label:"\u2615\uFE0F Java Spring Boot",children:(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Stop the running app."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Locate the bottom panel and click on the ",(0,i.jsx)(n.code,{children:"TERMINAL"})," tab."]}),"\n",(0,i.jsx)(n.li,{children:"Press Ctrl+C to interrup the running app"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Copy above code for ",(0,i.jsx)(n.code,{children:"applySchemaValidation"})," as a method in the ",(0,i.jsx)(n.code,{children:"LibraryApplication.java"})," class."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Modify the ",(0,i.jsx)(n.code,{children:"run"})," method to call ",(0,i.jsx)(n.code,{children:"applySchemaValidation"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'@Override\npublic void run(String... args) {\n    log.info("\uD83D\uDE80 App Started");\n    applySchemaValidation();\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Restart the app typing in the Terminal:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mvn spring-boot:start\n"})}),"\n"]}),"\n"]})})]}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.p,{children:["If you see an error related to your user permissions, go back to the ",(0,i.jsx)(n.a,{href:"#database-user-permissions",children:"Database User Permissions"})," section and update your user permissions."]})}),"\n",(0,i.jsx)(n.h2,{id:"test-the-schema-validation",children:"Test the schema validation"}),"\n",(0,i.jsxs)(o.Z,{groupId:"server",children:[(0,i.jsxs)(l.Z,{value:"node",label:"\uD83D\uDE80 NodeJS/Express",children:[(0,i.jsxs)(n.p,{children:["Now that the schema validation is enabled for the ",(0,i.jsx)(n.code,{children:"users"})," collection, you can test it by inserting a document that does not match the schema."]}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Open the file ",(0,i.jsx)(n.code,{children:"server/src/schema-validation/test-validation.ts"})," ",(0,i.jsx)(n.a,{href:"https://github.com/mongodb-developer/library-management-system/blob/main/server/src/schema-validation/test-validation.ts",children:"file"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Explore the call to the ",(0,i.jsx)(n.code,{children:"insertOne()"})," function around line 12 that will try to insert a new user and the error handling code around line 18."]}),"\n",(0,i.jsx)(n.li,{children:"Execute the script by running the following command."}),"\n"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"npx tsx src/schema-validation/test-validation.ts\n"})}),(0,i.jsxs)(n.p,{children:["The error describes that the ",(0,i.jsx)(n.code,{children:"name"})," and ",(0,i.jsx)(n.code,{children:"isAdmin"})," fields are required but missing in the document you tried to insert."]}),(0,i.jsxs)(n.p,{children:["Modify the script to insert a document again with the ",(0,i.jsx)(n.code,{children:"name"})," and ",(0,i.jsx)(n.code,{children:"isAdmin"})," fields and you should see the document inserted successfully."]})]}),(0,i.jsxs)(l.Z,{value:"java",label:"\u2615\uFE0F Java Spring Boot",children:[(0,i.jsxs)(n.p,{children:["Now that the schema validation is enabled for the ",(0,i.jsx)(n.code,{children:"users"})," collection, you can test it by inserting a document that does not match the schema, or you can check the Validation tab in Compass to check for the new validation rules."]}),(0,i.jsx)(n.p,{children:"You can also check it in the mongosh typing:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'db.getCollectionInfos({ name: "users" })\n'})}),(0,i.jsx)(n.p,{children:'If schema validation is not enabled, the "validator" field will be missing or empty.'})]})]}),"\n",(0,i.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,i.jsxs)(n.p,{children:["In this exercise, you explored the JSON schema for the ",(0,i.jsx)(n.code,{children:"users"})," collection, ran a script to apply the schema to the collection, and tested the schema validation by inserting a document that does not match the schema."]}),"\n",(0,i.jsxs)(n.p,{children:["In the next exercise, you will enable schema validation for the ",(0,i.jsx)(n.code,{children:"authors"})," collection."]})]})}function p(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},5525:function(e,n,t){t.d(n,{Z:()=>a});var s=t(5893);t(7294);var i=t(4904);function a({children:e,hidden:n,className:t}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,i.Z)("tabItem_Ymn6",t),hidden:n,children:e})}},7902:function(e,n,t){t.d(n,{Z:()=>b});var s=t(5893),i=t(7294),a=t(4904),o=t(9599),l=t(6550),r=t(2e3),c=t(4520),d=t(8341),h=t(6009);function u(e){return i.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p({value:e,tabValues:n}){return n.some(n=>n.value===e)}var m=t(7227);function x({className:e,block:n,selectedValue:t,selectValue:i,tabValues:l}){let r=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),d=e=>{let n=e.currentTarget,s=l[r.indexOf(n)].value;s!==t&&(c(n),i(s))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{let t=r.indexOf(e.currentTarget)+1;n=r[t]??r[0];break}case"ArrowLeft":{let t=r.indexOf(e.currentTarget)-1;n=r[t]??r[r.length-1]}}n?.focus()};return(0,s.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":n},e),children:l.map(({value:e,label:n,attributes:i})=>(0,s.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{r.push(e)},onKeyDown:h,onClick:d,...i,className:(0,a.Z)("tabs__item","tabItem_LNqP",i?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function j({lazy:e,children:n,selectedValue:t}){let o=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){let e=o.find(e=>e.props.value===t);return e?(0,i.cloneElement)(e,{className:(0,a.Z)("margin-top--md",e.props.className)}):null}return(0,s.jsx)("div",{className:"margin-top--md",children:o.map((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function v(e){let n=function(e){let{defaultValue:n,queryString:t=!1,groupId:s}=e,a=function(e){let{values:n,children:t}=e;return(0,i.useMemo)(()=>{let e=n??u(t).map(({props:{value:e,label:n,attributes:t,default:s}})=>({value:e,label:n,attributes:t,default:s})),s=(0,d.lx)(e,(e,n)=>e.value===n.value);if(s.length>0)throw Error(`Docusaurus error: Duplicate values "${s.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[n,t])}(e),[o,m]=(0,i.useState)(()=>(function({defaultValue:e,tabValues:n}){if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let t=n.find(e=>e.default)??n[0];if(!t)throw Error("Unexpected error: 0 tabValues");return t.value})({defaultValue:n,tabValues:a})),[x,j]=function({queryString:e=!1,groupId:n}){let t=(0,l.k6)(),s=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,c._X)(s),(0,i.useCallback)(e=>{if(!s)return;let n=new URLSearchParams(t.location.search);n.set(s,e),t.replace({...t.location,search:n.toString()})},[s,t])]}({queryString:t,groupId:s}),[v,b]=function({groupId:e}){let n=e?`docusaurus.tab.${e}`:null,[t,s]=(0,h.Nk)(n);return[t,(0,i.useCallback)(e=>{n&&s.set(e)},[n,s])]}({groupId:s}),f=(()=>{let e=x??v;return p({value:e,tabValues:a})?e:null})();return(0,r.Z)(()=>{f&&m(f)},[f]),{selectedValue:o,selectValue:(0,i.useCallback)(e=>{if(!p({value:e,tabValues:a}))throw Error(`Can't select invalid tab value=${e}`);m(e),j(e),b(e)},[j,b,a]),tabValues:a}}(e);return(0,s.jsxs)("div",{className:(0,a.Z)("tabs-container","tabList__CuJ"),children:[(0,s.jsx)(x,{...n,...e}),(0,s.jsx)(j,{...n,...e})]})}function b(e){let n=(0,m.Z)();return(0,s.jsx)(v,{...e,children:u(e.children)},String(n))}},65:function(e,n,t){t.d(n,{Z:()=>l,a:()=>o});var s=t(7294);let i={},a=s.createContext(i);function o(e){let n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);